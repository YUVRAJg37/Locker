

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Wed Apr 19 15:21:44 2023

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	text5,local,class=CODE,merge=1,delta=2
    13                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    14                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    15                           	dabs	1,0x7E,2
    16  0000                     
    17                           ; Version 2.40
    18                           ; Generated 17/11/2021 GMT
    19                           ; 
    20                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution. Publication is not required when
    34                           ;        this file is used in an embedded application.
    35                           ; 
    36                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    37                           ;        software without specific prior written permission.
    38                           ; 
    39                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    40                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    41                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    42                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    43                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    44                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    45                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    46                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    47                           ; 
    48                           ; 
    49                           ; Code-generator required, PIC16F877A Definitions
    50                           ; 
    51                           ; SFR Addresses
    52  0000                     	;# 
    53  0001                     	;# 
    54  0002                     	;# 
    55  0003                     	;# 
    56  0004                     	;# 
    57  0005                     	;# 
    58  0006                     	;# 
    59  0007                     	;# 
    60  0008                     	;# 
    61  0009                     	;# 
    62  000A                     	;# 
    63  000B                     	;# 
    64  000C                     	;# 
    65  000D                     	;# 
    66  000E                     	;# 
    67  000E                     	;# 
    68  000F                     	;# 
    69  0010                     	;# 
    70  0011                     	;# 
    71  0012                     	;# 
    72  0013                     	;# 
    73  0014                     	;# 
    74  0015                     	;# 
    75  0015                     	;# 
    76  0016                     	;# 
    77  0017                     	;# 
    78  0018                     	;# 
    79  0019                     	;# 
    80  001A                     	;# 
    81  001B                     	;# 
    82  001B                     	;# 
    83  001C                     	;# 
    84  001D                     	;# 
    85  001E                     	;# 
    86  001F                     	;# 
    87  0081                     	;# 
    88  0085                     	;# 
    89  0086                     	;# 
    90  0087                     	;# 
    91  0088                     	;# 
    92  0089                     	;# 
    93  008C                     	;# 
    94  008D                     	;# 
    95  008E                     	;# 
    96  0091                     	;# 
    97  0092                     	;# 
    98  0093                     	;# 
    99  0094                     	;# 
   100  0098                     	;# 
   101  0099                     	;# 
   102  009C                     	;# 
   103  009D                     	;# 
   104  009E                     	;# 
   105  009F                     	;# 
   106  010C                     	;# 
   107  010D                     	;# 
   108  010E                     	;# 
   109  010F                     	;# 
   110  018C                     	;# 
   111  018D                     	;# 
   112  0000                     	;# 
   113  0001                     	;# 
   114  0002                     	;# 
   115  0003                     	;# 
   116  0004                     	;# 
   117  0005                     	;# 
   118  0006                     	;# 
   119  0007                     	;# 
   120  0008                     	;# 
   121  0009                     	;# 
   122  000A                     	;# 
   123  000B                     	;# 
   124  000C                     	;# 
   125  000D                     	;# 
   126  000E                     	;# 
   127  000E                     	;# 
   128  000F                     	;# 
   129  0010                     	;# 
   130  0011                     	;# 
   131  0012                     	;# 
   132  0013                     	;# 
   133  0014                     	;# 
   134  0015                     	;# 
   135  0015                     	;# 
   136  0016                     	;# 
   137  0017                     	;# 
   138  0018                     	;# 
   139  0019                     	;# 
   140  001A                     	;# 
   141  001B                     	;# 
   142  001B                     	;# 
   143  001C                     	;# 
   144  001D                     	;# 
   145  001E                     	;# 
   146  001F                     	;# 
   147  0081                     	;# 
   148  0085                     	;# 
   149  0086                     	;# 
   150  0087                     	;# 
   151  0088                     	;# 
   152  0089                     	;# 
   153  008C                     	;# 
   154  008D                     	;# 
   155  008E                     	;# 
   156  0091                     	;# 
   157  0092                     	;# 
   158  0093                     	;# 
   159  0094                     	;# 
   160  0098                     	;# 
   161  0099                     	;# 
   162  009C                     	;# 
   163  009D                     	;# 
   164  009E                     	;# 
   165  009F                     	;# 
   166  010C                     	;# 
   167  010D                     	;# 
   168  010E                     	;# 
   169  010F                     	;# 
   170  018C                     	;# 
   171  018D                     	;# 
   172  0008                     _PORTD	set	8
   173  0037                     _RB7	set	55
   174  0036                     _RB6	set	54
   175  0035                     _RB5	set	53
   176  0034                     _RB4	set	52
   177  0032                     _RB2	set	50
   178  0031                     _RB1	set	49
   179  0030                     _RB0	set	48
   180  003A                     _RC2	set	58
   181  0039                     _RC1	set	57
   182  0038                     _RC0	set	56
   183  0088                     _TRISD	set	136
   184  0087                     _TRISC	set	135
   185  0086                     _TRISB	set	134
   186                           
   187                           	psect	strings
   188  0003                     __pstrings:
   189  0003                     stringtab:
   190  0003                     __stringtab:
   191  0003                     stringcode:	
   192                           ;	String table - string pointers are 1 byte each
   193                           
   194  0003                     stringdir:
   195  0003  3000               	movlw	high stringdir
   196  0004  008A               	movwf	10
   197  0005  0804               	movf	4,w
   198  0006  0A84               	incf	4,f
   199  0007  0782               	addwf	2,f
   200  0008                     __stringbase:
   201  0008  3400               	retlw	0
   202  0009                     __end_of__stringtab:
   203  0009                     STR_1:
   204  0009  344B               	retlw	75	;'K'
   205  000A  3465               	retlw	101	;'e'
   206  000B  3479               	retlw	121	;'y'
   207  000C  3470               	retlw	112	;'p'
   208  000D  3461               	retlw	97	;'a'
   209  000E  3464               	retlw	100	;'d'
   210  000F  3400               	retlw	0
   211                           
   212                           	psect	cinit
   213  07FC                     start_initialization:	
   214                           ; #config settings
   215                           
   216  07FC                     __initialization:
   217  07FC                     end_of_initialization:	
   218                           ;End of C runtime variable initialization code
   219                           
   220  07FC                     __end_of__initialization:
   221  07FC  0183               	clrf	3
   222  07FD  120A  118A  2F06   	ljmp	_main	;jump to C main() function
   223                           
   224                           	psect	cstackCOMMON
   225  0070                     __pcstackCOMMON:
   226  0070                     ?_lcd_data:
   227  0070                     ??_lcd_data:	
   228                           ; 1 bytes @ 0x0
   229                           
   230  0070                     ?_lcd_command:	
   231                           ; 1 bytes @ 0x0
   232                           
   233  0070                     ??_lcd_command:	
   234                           ; 1 bytes @ 0x0
   235                           
   236  0070                     ?_lcd_init:	
   237                           ; 1 bytes @ 0x0
   238                           
   239  0070                     ?_KeyPad:	
   240                           ; 1 bytes @ 0x0
   241                           
   242  0070                     ?_main:	
   243                           ; 1 bytes @ 0x0
   244                           
   245                           
   246                           ; 1 bytes @ 0x0
   247  0070                     	ds	2
   248  0072                     lcd_data@data:
   249  0072                     lcd_command@command:	
   250                           ; 1 bytes @ 0x2
   251                           
   252                           
   253                           ; 1 bytes @ 0x2
   254  0072                     	ds	1
   255  0073                     ?_lcd_string:
   256  0073                     ??_lcd_init:	
   257                           ; 1 bytes @ 0x3
   258                           
   259  0073                     ??_KeyPad:	
   260                           ; 1 bytes @ 0x3
   261                           
   262  0073                     lcd_string@length:	
   263                           ; 1 bytes @ 0x3
   264                           
   265                           
   266                           ; 1 bytes @ 0x3
   267  0073                     	ds	1
   268  0074                     ??_lcd_string:
   269                           
   270                           ; 1 bytes @ 0x4
   271  0074                     	ds	1
   272  0075                     lcd_string@string:
   273                           
   274                           ; 1 bytes @ 0x5
   275  0075                     	ds	1
   276  0076                     lcd_string@i:
   277                           
   278                           ; 1 bytes @ 0x6
   279  0076                     	ds	1
   280  0077                     ??_main:
   281                           
   282                           ; 1 bytes @ 0x7
   283  0077                     	ds	1
   284                           
   285                           	psect	maintext
   286  0706                     __pmaintext:	
   287 ;;
   288 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   289 ;;
   290 ;; *************** function _main *****************
   291 ;; Defined at:
   292 ;;		line 127 in file "main.c"
   293 ;; Parameters:    Size  Location     Type
   294 ;;		None
   295 ;; Auto vars:     Size  Location     Type
   296 ;;		None
   297 ;; Return value:  Size  Location     Type
   298 ;;                  1    wreg      void 
   299 ;; Registers used:
   300 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   301 ;; Tracked objects:
   302 ;;		On entry : B00/0
   303 ;;		On exit  : 0/0
   304 ;;		Unchanged: 0/0
   305 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   306 ;;      Params:         0       0       0       0       0
   307 ;;      Locals:         0       0       0       0       0
   308 ;;      Temps:          1       0       0       0       0
   309 ;;      Totals:         1       0       0       0       0
   310 ;;Total ram usage:        1 bytes
   311 ;; Hardware stack levels required when called: 2
   312 ;; This function calls:
   313 ;;		_KeyPad
   314 ;;		_lcd_command
   315 ;;		_lcd_init
   316 ;;		_lcd_string
   317 ;; This function is called by:
   318 ;;		Startup code after reset
   319 ;; This function uses a non-reentrant model
   320 ;;
   321                           
   322  0706                     _main:	
   323                           ;psect for function _main
   324                           
   325  0706                     l776:	
   326                           ;incstack = 0
   327                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   328                           
   329                           
   330                           ;main.c: 129:     TRISB = 0xF0;
   331  0706  30F0               	movlw	240
   332  0707  1683               	bsf	3,5	;RP0=1, select bank1
   333  0708  1303               	bcf	3,6	;RP1=0, select bank1
   334  0709  0086               	movwf	6	;volatile
   335  070A                     l778:
   336                           
   337                           ;main.c: 130:     TRISC = 0x00;
   338  070A  0187               	clrf	7	;volatile
   339  070B                     l780:
   340                           
   341                           ;main.c: 131:     TRISD = 0x00;
   342  070B  0188               	clrf	8	;volatile
   343  070C                     l782:
   344                           
   345                           ;main.c: 133:     lcd_init();
   346  070C  120A  118A  26D2  120A  118A  	fcall	_lcd_init
   347  0711                     l784:
   348                           
   349                           ;main.c: 134:     lcd_command(0x80);
   350  0711  3080               	movlw	128
   351  0712  120A  118A  26BD  120A  118A  	fcall	_lcd_command
   352  0717                     l786:
   353                           
   354                           ;main.c: 135:     lcd_string("Keypad", 7);
   355  0717  3007               	movlw	7
   356  0718  00F7               	movwf	??_main
   357  0719  0877               	movf	??_main,w
   358  071A  00F3               	movwf	lcd_string@length
   359  071B  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   360  071C  120A  118A  26EB  120A  118A  	fcall	_lcd_string
   361  0721                     l788:
   362                           
   363                           ;main.c: 136:     lcd_command(0xC0);
   364  0721  30C0               	movlw	192
   365  0722  120A  118A  26BD  120A  118A  	fcall	_lcd_command
   366  0727                     l790:
   367                           
   368                           ;main.c: 139:     {;main.c: 140:         KeyPad();
   369  0727  120A  118A  2730  120A  118A  	fcall	_KeyPad
   370  072C  2F27               	goto	l790
   371  072D  120A  118A  2800   	ljmp	start
   372  0730                     __end_of_main:
   373                           
   374                           	psect	text1
   375  06EB                     __ptext1:	
   376 ;; *************** function _lcd_string *****************
   377 ;; Defined at:
   378 ;;		line 38 in file "main.c"
   379 ;; Parameters:    Size  Location     Type
   380 ;;  string          1    wreg     PTR unsigned char 
   381 ;;		 -> STR_1(7), 
   382 ;;  length          1    3[COMMON] unsigned char 
   383 ;; Auto vars:     Size  Location     Type
   384 ;;  string          1    5[COMMON] PTR unsigned char 
   385 ;;		 -> STR_1(7), 
   386 ;;  i               1    6[COMMON] unsigned char 
   387 ;; Return value:  Size  Location     Type
   388 ;;                  1    wreg      void 
   389 ;; Registers used:
   390 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   391 ;; Tracked objects:
   392 ;;		On entry : 0/0
   393 ;;		On exit  : 0/0
   394 ;;		Unchanged: 0/0
   395 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   396 ;;      Params:         1       0       0       0       0
   397 ;;      Locals:         2       0       0       0       0
   398 ;;      Temps:          1       0       0       0       0
   399 ;;      Totals:         4       0       0       0       0
   400 ;;Total ram usage:        4 bytes
   401 ;; Hardware stack levels used: 1
   402 ;; Hardware stack levels required when called: 1
   403 ;; This function calls:
   404 ;;		_lcd_data
   405 ;; This function is called by:
   406 ;;		_main
   407 ;; This function uses a non-reentrant model
   408 ;;
   409                           
   410  06EB                     _lcd_string:	
   411                           ;psect for function _lcd_string
   412                           
   413                           
   414                           ;incstack = 0
   415                           ; Regs used in _lcd_string: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   416                           ;lcd_string@string stored from wreg
   417  06EB  00F5               	movwf	lcd_string@string
   418  06EC                     l768:
   419                           
   420                           ;main.c: 38: void lcd_string(unsigned char* string, unsigned char length);main.c: 39: {;
      +                          main.c: 40:     unsigned char i;;main.c: 41:     for(i=0; i<length; i++)
   421  06EC  01F6               	clrf	lcd_string@i
   422  06ED  2EFF               	goto	l774
   423  06EE                     l770:
   424                           
   425                           ;main.c: 42:     {;main.c: 43:         lcd_data(string[i]);
   426  06EE  0876               	movf	lcd_string@i,w
   427  06EF  0775               	addwf	lcd_string@string,w
   428  06F0  0084               	movwf	4
   429  06F1  120A  118A  2003  120A  118A  	fcall	stringdir
   430  06F6  120A  118A  26A8  120A  118A  	fcall	_lcd_data
   431  06FB                     l772:
   432                           
   433                           ;main.c: 44:     }
   434  06FB  3001               	movlw	1
   435  06FC  00F4               	movwf	??_lcd_string
   436  06FD  0874               	movf	??_lcd_string,w
   437  06FE  07F6               	addwf	lcd_string@i,f
   438  06FF                     l774:
   439  06FF  0873               	movf	lcd_string@length,w
   440  0700  0276               	subwf	lcd_string@i,w
   441  0701  1C03               	skipc
   442  0702  2F04               	goto	u261
   443  0703  2F05               	goto	u260
   444  0704                     u261:
   445  0704  2EEE               	goto	l770
   446  0705                     u260:
   447  0705                     l42:
   448  0705  0008               	return
   449  0706                     __end_of_lcd_string:
   450                           
   451                           	psect	text2
   452  06D2                     __ptext2:	
   453 ;; *************** function _lcd_init *****************
   454 ;; Defined at:
   455 ;;		line 47 in file "main.c"
   456 ;; Parameters:    Size  Location     Type
   457 ;;		None
   458 ;; Auto vars:     Size  Location     Type
   459 ;;		None
   460 ;; Return value:  Size  Location     Type
   461 ;;                  1    wreg      void 
   462 ;; Registers used:
   463 ;;		wreg, status,2, status,0, pclath, cstack
   464 ;; Tracked objects:
   465 ;;		On entry : 0/0
   466 ;;		On exit  : 0/0
   467 ;;		Unchanged: 0/0
   468 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   469 ;;      Params:         0       0       0       0       0
   470 ;;      Locals:         0       0       0       0       0
   471 ;;      Temps:          0       0       0       0       0
   472 ;;      Totals:         0       0       0       0       0
   473 ;;Total ram usage:        0 bytes
   474 ;; Hardware stack levels used: 1
   475 ;; Hardware stack levels required when called: 1
   476 ;; This function calls:
   477 ;;		_lcd_command
   478 ;; This function is called by:
   479 ;;		_main
   480 ;; This function uses a non-reentrant model
   481 ;;
   482                           
   483  06D2                     _lcd_init:	
   484                           ;psect for function _lcd_init
   485                           
   486  06D2                     l724:	
   487                           ;incstack = 0
   488                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
   489                           
   490                           
   491                           ;main.c: 49:     lcd_command(0x38);
   492  06D2  3038               	movlw	56
   493  06D3  120A  118A  26BD  120A  118A  	fcall	_lcd_command
   494                           
   495                           ;main.c: 50:     lcd_command(0x06);
   496  06D8  3006               	movlw	6
   497  06D9  120A  118A  26BD  120A  118A  	fcall	_lcd_command
   498                           
   499                           ;main.c: 51:     lcd_command(0x0C);
   500  06DE  300C               	movlw	12
   501  06DF  120A  118A  26BD  120A  118A  	fcall	_lcd_command
   502                           
   503                           ;main.c: 52:     lcd_command(0x01);
   504  06E4  3001               	movlw	1
   505  06E5  120A  118A  26BD  120A  118A  	fcall	_lcd_command
   506  06EA                     l45:
   507  06EA  0008               	return
   508  06EB                     __end_of_lcd_init:
   509                           
   510                           	psect	text3
   511  06BD                     __ptext3:	
   512 ;; *************** function _lcd_command *****************
   513 ;; Defined at:
   514 ;;		line 27 in file "main.c"
   515 ;; Parameters:    Size  Location     Type
   516 ;;  command         1    wreg     unsigned char 
   517 ;; Auto vars:     Size  Location     Type
   518 ;;  command         1    2[COMMON] unsigned char 
   519 ;; Return value:  Size  Location     Type
   520 ;;                  1    wreg      void 
   521 ;; Registers used:
   522 ;;		wreg
   523 ;; Tracked objects:
   524 ;;		On entry : 0/0
   525 ;;		On exit  : 0/0
   526 ;;		Unchanged: 0/0
   527 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   528 ;;      Params:         0       0       0       0       0
   529 ;;      Locals:         1       0       0       0       0
   530 ;;      Temps:          2       0       0       0       0
   531 ;;      Totals:         3       0       0       0       0
   532 ;;Total ram usage:        3 bytes
   533 ;; Hardware stack levels used: 1
   534 ;; This function calls:
   535 ;;		Nothing
   536 ;; This function is called by:
   537 ;;		_lcd_init
   538 ;;		_main
   539 ;; This function uses a non-reentrant model
   540 ;;
   541                           
   542  06BD                     _lcd_command:	
   543                           ;psect for function _lcd_command
   544                           
   545                           
   546                           ;incstack = 0
   547                           ; Regs used in _lcd_command: [wreg]
   548                           ;lcd_command@command stored from wreg
   549  06BD  00F2               	movwf	lcd_command@command
   550  06BE                     l706:
   551                           
   552                           ;main.c: 27: void lcd_command(unsigned char command);main.c: 28: {;main.c: 29:     PORTD
      +                           = command;
   553  06BE  0872               	movf	lcd_command@command,w
   554  06BF  1283               	bcf	3,5	;RP0=0, select bank0
   555  06C0  1303               	bcf	3,6	;RP1=0, select bank0
   556  06C1  0088               	movwf	8	;volatile
   557  06C2                     l708:
   558                           
   559                           ;main.c: 30:     RC0 = 0;
   560  06C2  1007               	bcf	7,0	;volatile
   561  06C3                     l710:
   562                           
   563                           ;main.c: 31:     RC1 = 0;
   564  06C3  1087               	bcf	7,1	;volatile
   565  06C4                     l712:
   566                           
   567                           ;main.c: 32:     RC2 = 1;
   568  06C4  1507               	bsf	7,2	;volatile
   569                           
   570                           ;main.c: 34:     _delay((unsigned long)((5)*(20000000/4000.0)));
   571  06C5  3021               	movlw	33
   572  06C6  00F1               	movwf	??_lcd_command+1
   573  06C7  3076               	movlw	118
   574  06C8  00F0               	movwf	??_lcd_command
   575  06C9                     u277:
   576  06C9  0BF0               	decfsz	??_lcd_command,f
   577  06CA  2EC9               	goto	u277
   578  06CB  0BF1               	decfsz	??_lcd_command+1,f
   579  06CC  2EC9               	goto	u277
   580  06CD  0000               	nop
   581  06CE                     l714:
   582                           
   583                           ;main.c: 35:     RC2 = 0;
   584  06CE  1283               	bcf	3,5	;RP0=0, select bank0
   585  06CF  1303               	bcf	3,6	;RP1=0, select bank0
   586  06D0  1107               	bcf	7,2	;volatile
   587  06D1                     l36:
   588  06D1  0008               	return
   589  06D2                     __end_of_lcd_command:
   590                           
   591                           	psect	text4
   592  0730                     __ptext4:	
   593 ;; *************** function _KeyPad *****************
   594 ;; Defined at:
   595 ;;		line 55 in file "main.c"
   596 ;; Parameters:    Size  Location     Type
   597 ;;		None
   598 ;; Auto vars:     Size  Location     Type
   599 ;;		None
   600 ;; Return value:  Size  Location     Type
   601 ;;                  1    wreg      void 
   602 ;; Registers used:
   603 ;;		wreg, status,2, status,0, pclath, cstack
   604 ;; Tracked objects:
   605 ;;		On entry : 0/0
   606 ;;		On exit  : 0/0
   607 ;;		Unchanged: 0/0
   608 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   609 ;;      Params:         0       0       0       0       0
   610 ;;      Locals:         0       0       0       0       0
   611 ;;      Temps:          0       0       0       0       0
   612 ;;      Totals:         0       0       0       0       0
   613 ;;Total ram usage:        0 bytes
   614 ;; Hardware stack levels used: 1
   615 ;; Hardware stack levels required when called: 1
   616 ;; This function calls:
   617 ;;		_lcd_data
   618 ;; This function is called by:
   619 ;;		_main
   620 ;; This function uses a non-reentrant model
   621 ;;
   622                           
   623  0730                     _KeyPad:	
   624                           ;psect for function _KeyPad
   625                           
   626  0730                     l726:	
   627                           ;incstack = 0
   628                           ; Regs used in _KeyPad: [wreg+status,2+status,0+pclath+cstack]
   629                           
   630                           
   631                           ;main.c: 57:     RB0 = 1; RB1=0; RB2=0;
   632  0730  1283               	bcf	3,5	;RP0=0, select bank0
   633  0731  1303               	bcf	3,6	;RP1=0, select bank0
   634  0732  1406               	bsf	6,0	;volatile
   635  0733  1086               	bcf	6,1	;volatile
   636  0734  1106               	bcf	6,2	;volatile
   637                           
   638                           ;main.c: 59:     if(RB4 == 1)
   639  0735  1E06               	btfss	6,4	;volatile
   640  0736  2F38               	goto	u21
   641  0737  2F39               	goto	u20
   642  0738                     u21:
   643  0738  2F45               	goto	l48
   644  0739                     u20:
   645  0739                     l728:
   646                           
   647                           ;main.c: 60:     {;main.c: 61:         lcd_data('1');
   648  0739  3031               	movlw	49
   649  073A  120A  118A  26A8  120A  118A  	fcall	_lcd_data
   650  073F                     l49:	
   651                           ;main.c: 62:         while(RB4 == 1);
   652                           
   653  073F  1283               	bcf	3,5	;RP0=0, select bank0
   654  0740  1303               	bcf	3,6	;RP1=0, select bank0
   655  0741  1A06               	btfsc	6,4	;volatile
   656  0742  2F44               	goto	u31
   657  0743  2F45               	goto	u30
   658  0744                     u31:
   659  0744  2F3F               	goto	l49
   660  0745                     u30:
   661  0745                     l48:	
   662                           ;main.c: 63:     }
   663                           
   664                           
   665                           ;main.c: 64:     if(RB5 == 1)
   666  0745  1E86               	btfss	6,5	;volatile
   667  0746  2F48               	goto	u41
   668  0747  2F49               	goto	u40
   669  0748                     u41:
   670  0748  2F55               	goto	l52
   671  0749                     u40:
   672  0749                     l730:
   673                           
   674                           ;main.c: 65:     {;main.c: 66:         lcd_data('4');
   675  0749  3034               	movlw	52
   676  074A  120A  118A  26A8  120A  118A  	fcall	_lcd_data
   677  074F                     l53:	
   678                           ;main.c: 67:         while(RB5 == 1);
   679                           
   680  074F  1283               	bcf	3,5	;RP0=0, select bank0
   681  0750  1303               	bcf	3,6	;RP1=0, select bank0
   682  0751  1A86               	btfsc	6,5	;volatile
   683  0752  2F54               	goto	u51
   684  0753  2F55               	goto	u50
   685  0754                     u51:
   686  0754  2F4F               	goto	l53
   687  0755                     u50:
   688  0755                     l52:	
   689                           ;main.c: 68:     }
   690                           
   691                           
   692                           ;main.c: 69:     if(RB6 == 1)
   693  0755  1F06               	btfss	6,6	;volatile
   694  0756  2F58               	goto	u61
   695  0757  2F59               	goto	u60
   696  0758                     u61:
   697  0758  2F65               	goto	l56
   698  0759                     u60:
   699  0759                     l732:
   700                           
   701                           ;main.c: 70:     {;main.c: 71:         lcd_data('7');
   702  0759  3037               	movlw	55
   703  075A  120A  118A  26A8  120A  118A  	fcall	_lcd_data
   704  075F                     l57:	
   705                           ;main.c: 72:         while(RB6 == 1);
   706                           
   707  075F  1283               	bcf	3,5	;RP0=0, select bank0
   708  0760  1303               	bcf	3,6	;RP1=0, select bank0
   709  0761  1B06               	btfsc	6,6	;volatile
   710  0762  2F64               	goto	u71
   711  0763  2F65               	goto	u70
   712  0764                     u71:
   713  0764  2F5F               	goto	l57
   714  0765                     u70:
   715  0765                     l56:	
   716                           ;main.c: 73:     }
   717                           
   718                           
   719                           ;main.c: 74:     if(RB7 == 1)
   720  0765  1F86               	btfss	6,7	;volatile
   721  0766  2F68               	goto	u81
   722  0767  2F69               	goto	u80
   723  0768                     u81:
   724  0768  2F75               	goto	l60
   725  0769                     u80:
   726  0769                     l734:
   727                           
   728                           ;main.c: 75:     {;main.c: 76:         lcd_data('*');
   729  0769  302A               	movlw	42
   730  076A  120A  118A  26A8  120A  118A  	fcall	_lcd_data
   731  076F                     l61:	
   732                           ;main.c: 77:         while(RB7 == 1);
   733                           
   734  076F  1283               	bcf	3,5	;RP0=0, select bank0
   735  0770  1303               	bcf	3,6	;RP1=0, select bank0
   736  0771  1B86               	btfsc	6,7	;volatile
   737  0772  2F74               	goto	u91
   738  0773  2F75               	goto	u90
   739  0774                     u91:
   740  0774  2F6F               	goto	l61
   741  0775                     u90:
   742  0775                     l60:	
   743                           ;main.c: 78:     }
   744                           
   745                           
   746                           ;main.c: 80:     RB0 = 0; RB1=1; RB2=0;
   747  0775  1006               	bcf	6,0	;volatile
   748  0776  1486               	bsf	6,1	;volatile
   749  0777  1106               	bcf	6,2	;volatile
   750                           
   751                           ;main.c: 82:     if(RB4 == 1)
   752  0778  1E06               	btfss	6,4	;volatile
   753  0779  2F7B               	goto	u101
   754  077A  2F7C               	goto	u100
   755  077B                     u101:
   756  077B  2F88               	goto	l64
   757  077C                     u100:
   758  077C                     l736:
   759                           
   760                           ;main.c: 83:     {;main.c: 84:         lcd_data('2');
   761  077C  3032               	movlw	50
   762  077D  120A  118A  26A8  120A  118A  	fcall	_lcd_data
   763  0782                     l65:	
   764                           ;main.c: 85:         while(RB4 == 1);
   765                           
   766  0782  1283               	bcf	3,5	;RP0=0, select bank0
   767  0783  1303               	bcf	3,6	;RP1=0, select bank0
   768  0784  1A06               	btfsc	6,4	;volatile
   769  0785  2F87               	goto	u111
   770  0786  2F88               	goto	u110
   771  0787                     u111:
   772  0787  2F82               	goto	l65
   773  0788                     u110:
   774  0788                     l64:	
   775                           ;main.c: 86:     }
   776                           
   777                           
   778                           ;main.c: 87:     if(RB5 == 1)
   779  0788  1E86               	btfss	6,5	;volatile
   780  0789  2F8B               	goto	u121
   781  078A  2F8C               	goto	u120
   782  078B                     u121:
   783  078B  2F98               	goto	l68
   784  078C                     u120:
   785  078C                     l738:
   786                           
   787                           ;main.c: 88:     {;main.c: 89:         lcd_data('5');
   788  078C  3035               	movlw	53
   789  078D  120A  118A  26A8  120A  118A  	fcall	_lcd_data
   790  0792                     l69:	
   791                           ;main.c: 90:         while(RB5 == 1);
   792                           
   793  0792  1283               	bcf	3,5	;RP0=0, select bank0
   794  0793  1303               	bcf	3,6	;RP1=0, select bank0
   795  0794  1A86               	btfsc	6,5	;volatile
   796  0795  2F97               	goto	u131
   797  0796  2F98               	goto	u130
   798  0797                     u131:
   799  0797  2F92               	goto	l69
   800  0798                     u130:
   801  0798                     l68:	
   802                           ;main.c: 91:     }
   803                           
   804                           
   805                           ;main.c: 92:     if(RB6 == 1)
   806  0798  1F06               	btfss	6,6	;volatile
   807  0799  2F9B               	goto	u141
   808  079A  2F9C               	goto	u140
   809  079B                     u141:
   810  079B  2FA8               	goto	l72
   811  079C                     u140:
   812  079C                     l740:
   813                           
   814                           ;main.c: 93:     {;main.c: 94:         lcd_data('8');
   815  079C  3038               	movlw	56
   816  079D  120A  118A  26A8  120A  118A  	fcall	_lcd_data
   817  07A2                     l73:	
   818                           ;main.c: 95:         while(RB6 == 1);
   819                           
   820  07A2  1283               	bcf	3,5	;RP0=0, select bank0
   821  07A3  1303               	bcf	3,6	;RP1=0, select bank0
   822  07A4  1B06               	btfsc	6,6	;volatile
   823  07A5  2FA7               	goto	u151
   824  07A6  2FA8               	goto	u150
   825  07A7                     u151:
   826  07A7  2FA2               	goto	l73
   827  07A8                     u150:
   828  07A8                     l72:	
   829                           ;main.c: 96:     }
   830                           
   831                           
   832                           ;main.c: 97:     if(RB7 == 1)
   833  07A8  1F86               	btfss	6,7	;volatile
   834  07A9  2FAB               	goto	u161
   835  07AA  2FAC               	goto	u160
   836  07AB                     u161:
   837  07AB  2FB8               	goto	l76
   838  07AC                     u160:
   839  07AC                     l742:
   840                           
   841                           ;main.c: 98:     {;main.c: 99:         lcd_data('0');
   842  07AC  3030               	movlw	48
   843  07AD  120A  118A  26A8  120A  118A  	fcall	_lcd_data
   844  07B2                     l77:	
   845                           ;main.c: 100:         while(RB7 == 1);
   846                           
   847  07B2  1283               	bcf	3,5	;RP0=0, select bank0
   848  07B3  1303               	bcf	3,6	;RP1=0, select bank0
   849  07B4  1B86               	btfsc	6,7	;volatile
   850  07B5  2FB7               	goto	u171
   851  07B6  2FB8               	goto	u170
   852  07B7                     u171:
   853  07B7  2FB2               	goto	l77
   854  07B8                     u170:
   855  07B8                     l76:	
   856                           ;main.c: 101:     }
   857                           
   858                           
   859                           ;main.c: 103:     RB0 = 0; RB1=0; RB2=1;
   860  07B8  1006               	bcf	6,0	;volatile
   861  07B9  1086               	bcf	6,1	;volatile
   862  07BA  1506               	bsf	6,2	;volatile
   863                           
   864                           ;main.c: 105:     if(RB4 == 1)
   865  07BB  1E06               	btfss	6,4	;volatile
   866  07BC  2FBE               	goto	u181
   867  07BD  2FBF               	goto	u180
   868  07BE                     u181:
   869  07BE  2FCB               	goto	l80
   870  07BF                     u180:
   871  07BF                     l744:
   872                           
   873                           ;main.c: 106:     {;main.c: 107:         lcd_data('3');
   874  07BF  3033               	movlw	51
   875  07C0  120A  118A  26A8  120A  118A  	fcall	_lcd_data
   876  07C5                     l81:	
   877                           ;main.c: 108:         while(RB4 == 1);
   878                           
   879  07C5  1283               	bcf	3,5	;RP0=0, select bank0
   880  07C6  1303               	bcf	3,6	;RP1=0, select bank0
   881  07C7  1A06               	btfsc	6,4	;volatile
   882  07C8  2FCA               	goto	u191
   883  07C9  2FCB               	goto	u190
   884  07CA                     u191:
   885  07CA  2FC5               	goto	l81
   886  07CB                     u190:
   887  07CB                     l80:	
   888                           ;main.c: 109:     }
   889                           
   890                           
   891                           ;main.c: 110:     if(RB5 == 1)
   892  07CB  1E86               	btfss	6,5	;volatile
   893  07CC  2FCE               	goto	u201
   894  07CD  2FCF               	goto	u200
   895  07CE                     u201:
   896  07CE  2FDB               	goto	l84
   897  07CF                     u200:
   898  07CF                     l746:
   899                           
   900                           ;main.c: 111:     {;main.c: 112:         lcd_data('6');
   901  07CF  3036               	movlw	54
   902  07D0  120A  118A  26A8  120A  118A  	fcall	_lcd_data
   903  07D5                     l85:	
   904                           ;main.c: 113:         while(RB5 == 1);
   905                           
   906  07D5  1283               	bcf	3,5	;RP0=0, select bank0
   907  07D6  1303               	bcf	3,6	;RP1=0, select bank0
   908  07D7  1A86               	btfsc	6,5	;volatile
   909  07D8  2FDA               	goto	u211
   910  07D9  2FDB               	goto	u210
   911  07DA                     u211:
   912  07DA  2FD5               	goto	l85
   913  07DB                     u210:
   914  07DB                     l84:	
   915                           ;main.c: 114:     }
   916                           
   917                           
   918                           ;main.c: 115:     if(RB6 == 1)
   919  07DB  1F06               	btfss	6,6	;volatile
   920  07DC  2FDE               	goto	u221
   921  07DD  2FDF               	goto	u220
   922  07DE                     u221:
   923  07DE  2FEB               	goto	l88
   924  07DF                     u220:
   925  07DF                     l748:
   926                           
   927                           ;main.c: 116:     {;main.c: 117:         lcd_data('9');
   928  07DF  3039               	movlw	57
   929  07E0  120A  118A  26A8  120A  118A  	fcall	_lcd_data
   930  07E5                     l89:	
   931                           ;main.c: 118:         while(RB6 == 1);
   932                           
   933  07E5  1283               	bcf	3,5	;RP0=0, select bank0
   934  07E6  1303               	bcf	3,6	;RP1=0, select bank0
   935  07E7  1B06               	btfsc	6,6	;volatile
   936  07E8  2FEA               	goto	u231
   937  07E9  2FEB               	goto	u230
   938  07EA                     u231:
   939  07EA  2FE5               	goto	l89
   940  07EB                     u230:
   941  07EB                     l88:	
   942                           ;main.c: 119:     }
   943                           
   944                           
   945                           ;main.c: 120:     if(RB7 == 1)
   946  07EB  1F86               	btfss	6,7	;volatile
   947  07EC  2FEE               	goto	u241
   948  07ED  2FEF               	goto	u240
   949  07EE                     u241:
   950  07EE  2FFB               	goto	l96
   951  07EF                     u240:
   952  07EF                     l750:
   953                           
   954                           ;main.c: 121:     {;main.c: 122:         lcd_data('#');
   955  07EF  3023               	movlw	35
   956  07F0  120A  118A  26A8  120A  118A  	fcall	_lcd_data
   957  07F5                     l93:	
   958                           ;main.c: 123:         while(RB7 == 1);
   959                           
   960  07F5  1283               	bcf	3,5	;RP0=0, select bank0
   961  07F6  1303               	bcf	3,6	;RP1=0, select bank0
   962  07F7  1B86               	btfsc	6,7	;volatile
   963  07F8  2FFA               	goto	u251
   964  07F9  2FFB               	goto	u250
   965  07FA                     u251:
   966  07FA  2FF5               	goto	l93
   967  07FB                     u250:
   968  07FB                     l96:
   969  07FB  0008               	return
   970  07FC                     __end_of_KeyPad:
   971                           
   972                           	psect	text5
   973  06A8                     __ptext5:	
   974 ;; *************** function _lcd_data *****************
   975 ;; Defined at:
   976 ;;		line 16 in file "main.c"
   977 ;; Parameters:    Size  Location     Type
   978 ;;  data            1    wreg     unsigned char 
   979 ;; Auto vars:     Size  Location     Type
   980 ;;  data            1    2[COMMON] unsigned char 
   981 ;; Return value:  Size  Location     Type
   982 ;;                  1    wreg      void 
   983 ;; Registers used:
   984 ;;		wreg
   985 ;; Tracked objects:
   986 ;;		On entry : 0/0
   987 ;;		On exit  : 0/0
   988 ;;		Unchanged: 0/0
   989 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   990 ;;      Params:         0       0       0       0       0
   991 ;;      Locals:         1       0       0       0       0
   992 ;;      Temps:          2       0       0       0       0
   993 ;;      Totals:         3       0       0       0       0
   994 ;;Total ram usage:        3 bytes
   995 ;; Hardware stack levels used: 1
   996 ;; This function calls:
   997 ;;		Nothing
   998 ;; This function is called by:
   999 ;;		_lcd_string
  1000 ;;		_KeyPad
  1001 ;; This function uses a non-reentrant model
  1002 ;;
  1003                           
  1004  06A8                     _lcd_data:	
  1005                           ;psect for function _lcd_data
  1006                           
  1007                           
  1008                           ;incstack = 0
  1009                           ; Regs used in _lcd_data: [wreg]
  1010                           ;lcd_data@data stored from wreg
  1011  06A8  00F2               	movwf	lcd_data@data
  1012  06A9                     l696:
  1013                           
  1014                           ;main.c: 16: void lcd_data(unsigned char data);main.c: 17: {;main.c: 18:     PORTD= data
      +                          ;
  1015  06A9  0872               	movf	lcd_data@data,w
  1016  06AA  1283               	bcf	3,5	;RP0=0, select bank0
  1017  06AB  1303               	bcf	3,6	;RP1=0, select bank0
  1018  06AC  0088               	movwf	8	;volatile
  1019  06AD                     l698:
  1020                           
  1021                           ;main.c: 19:     RC0 = 1;
  1022  06AD  1407               	bsf	7,0	;volatile
  1023  06AE                     l700:
  1024                           
  1025                           ;main.c: 20:     RC1 = 0;
  1026  06AE  1087               	bcf	7,1	;volatile
  1027  06AF                     l702:
  1028                           
  1029                           ;main.c: 21:     RC2 = 1;
  1030  06AF  1507               	bsf	7,2	;volatile
  1031                           
  1032                           ;main.c: 23:     _delay((unsigned long)((2)*(20000000/4000.0)));
  1033  06B0  300D               	movlw	13
  1034  06B1  00F1               	movwf	??_lcd_data+1
  1035  06B2  30FB               	movlw	251
  1036  06B3  00F0               	movwf	??_lcd_data
  1037  06B4                     u287:
  1038  06B4  0BF0               	decfsz	??_lcd_data,f
  1039  06B5  2EB4               	goto	u287
  1040  06B6  0BF1               	decfsz	??_lcd_data+1,f
  1041  06B7  2EB4               	goto	u287
  1042  06B8  2EB9               	nop2
  1043  06B9                     l704:
  1044                           
  1045                           ;main.c: 24:     RC2 = 0;
  1046  06B9  1283               	bcf	3,5	;RP0=0, select bank0
  1047  06BA  1303               	bcf	3,6	;RP1=0, select bank0
  1048  06BB  1107               	bcf	7,2	;volatile
  1049  06BC                     l33:
  1050  06BC  0008               	return
  1051  06BD                     __end_of_lcd_data:
  1052  007E                     btemp	set	126	;btemp
  1053  007E                     wtemp0	set	126
  1054                           
  1055                           	psect	idloc
  1056                           
  1057                           ;Config register IDLOC0 @ 0x2000
  1058                           ;	unspecified, using default values
  1059  2000                     	org	8192
  1060  2000  3FFF               	dw	16383
  1061                           
  1062                           ;Config register IDLOC1 @ 0x2001
  1063                           ;	unspecified, using default values
  1064  2001                     	org	8193
  1065  2001  3FFF               	dw	16383
  1066                           
  1067                           ;Config register IDLOC2 @ 0x2002
  1068                           ;	unspecified, using default values
  1069  2002                     	org	8194
  1070  2002  3FFF               	dw	16383
  1071                           
  1072                           ;Config register IDLOC3 @ 0x2003
  1073                           ;	unspecified, using default values
  1074  2003                     	org	8195
  1075  2003  3FFF               	dw	16383
  1076                           
  1077                           	psect	config
  1078                           
  1079                           ;Config register CONFIG @ 0x2007
  1080                           ;	unspecified, using default values
  1081                           ;	Oscillator Selection bits
  1082                           ;	FOSC = 0x3, unprogrammed default
  1083                           ;	Watchdog Timer Enable bit
  1084                           ;	WDTE = 0x1, unprogrammed default
  1085                           ;	Power-up Timer Enable bit
  1086                           ;	PWRTE = 0x1, unprogrammed default
  1087                           ;	Brown-out Reset Enable bit
  1088                           ;	BOREN = 0x1, unprogrammed default
  1089                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  1090                           ;	LVP = 0x1, unprogrammed default
  1091                           ;	Data EEPROM Memory Code Protection bit
  1092                           ;	CPD = 0x1, unprogrammed default
  1093                           ;	Flash Program Memory Write Enable bits
  1094                           ;	WRT = 0x3, unprogrammed default
  1095                           ;	In-Circuit Debugger Mode bit
  1096                           ;	DEBUG = 0x1, unprogrammed default
  1097                           ;	Flash Program Memory Code Protection bit
  1098                           ;	CP = 0x1, unprogrammed default
  1099  2007                     	org	8199
  1100  2007  3FFF               	dw	16383

Data Sizes:
    Strings     7
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8       8
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    lcd_string@string	PTR unsigned char  size(1) Largest target is 7
		 -> STR_1(CODE[7]), 


Critical Paths under _main in COMMON

    _main->_lcd_string
    _lcd_string->_lcd_data
    _lcd_init->_lcd_command
    _KeyPad->_lcd_data

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0     259
                                              7 COMMON     1     1      0
                             _KeyPad
                        _lcd_command
                           _lcd_init
                         _lcd_string
 ---------------------------------------------------------------------------------
 (1) _lcd_string                                           4     3      1     214
                                              3 COMMON     4     3      1
                           _lcd_data
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             0     0      0      15
                        _lcd_command
 ---------------------------------------------------------------------------------
 (2) _lcd_command                                          3     3      0      15
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _KeyPad                                               0     0      0      15
                           _lcd_data
 ---------------------------------------------------------------------------------
 (2) _lcd_data                                             3     3      0      15
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _KeyPad
     _lcd_data
   _lcd_command
   _lcd_init
     _lcd_command
   _lcd_string
     _lcd_data

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       8       1       57.1%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Wed Apr 19 15:21:44 2023

                      pc 0002             lcd_data@data 0072                       l33 06BC  
                     l42 0705                       l60 0775                       l52 0755  
                     l36 06D1                       l61 076F                       l53 074F  
                     l45 06EA                       l80 07CB                       l72 07A8  
                     l64 0788                       l56 0765                       l48 0745  
                     l81 07C5                       l73 07A2                       l65 0782  
                     l57 075F                       l49 073F                       l84 07DB  
                     l76 07B8                       l68 0798                       l93 07F5  
                     l85 07D5                       l77 07B2                       l69 0792  
                     l96 07FB                       l88 07EB                       l89 07E5  
                     u20 0739                       u21 0738                       u30 0745  
                     u31 0744                       u40 0749                       u41 0748  
                     u50 0755                       u51 0754                       u60 0759  
                     u61 0758                       u70 0765                       u71 0764  
                     u80 0769                       u81 0768                       u90 0775  
                     u91 0774                       fsr 0004                      l700 06AE  
                    l702 06AF                      l710 06C3                      l704 06B9  
                    l712 06C4                      l730 0749                      l714 06CE  
                    l706 06BE                      l740 079C                      l732 0759  
                    l708 06C2                      l724 06D2                      l750 07EF  
                    l742 07AC                      l734 0769                      l726 0730  
                    l744 07BF                      l736 077C                      l728 0739  
                    l746 07CF                      l738 078C                      l770 06EE  
                    l748 07DF                      l772 06FB                      l780 070B  
                    l774 06FF                      l790 0727                      l782 070C  
                    l696 06A9                      l768 06EC                      l784 0711  
                    l776 0706                      l698 06AD                      l786 0717  
                    l778 070A                      l788 0721                      _RB0 0030  
                    _RB1 0031                      _RC0 0038                      _RB2 0032  
                    _RC1 0039                      _RC2 003A                      _RB4 0034  
                    _RB5 0035                      _RB6 0036                      _RB7 0037  
                    u100 077C                      u101 077B                      u110 0788  
                    u111 0787                      u200 07CF                      u120 078C  
                    u201 07CE                      u121 078B                      u210 07DB  
                    u130 0798                      u211 07DA                      u131 0797  
                    u220 07DF                      u140 079C                      u221 07DE  
                    u141 079B                      u230 07EB                      u150 07A8  
                    u231 07EA                      u151 07A7                      u240 07EF  
                    u160 07AC                      u241 07EE                      u161 07AB  
                    u250 07FB                      u170 07B8                      u251 07FA  
                    u171 07B7                      u180 07BF                      u260 0705  
                    u181 07BE                      u261 0704                      u190 07CB  
                    u191 07CA                      u277 06C9                      u287 06B4  
                    fsr0 0004                     STR_1 0009                     _main 0706  
                   btemp 007E                     start 0000              lcd_string@i 0076  
                  ?_main 0070                    _PORTD 0008                    _TRISB 0086  
                  _TRISC 0087                    _TRISD 0088                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 07FC  
           __end_of_main 0730                   ??_main 0077                   _KeyPad 0730  
       __end_of_lcd_data 06BD         __end_of_lcd_init 06EB  __end_of__initialization 07FC  
         __pcstackCOMMON 0070                  ?_KeyPad 0070               __pmaintext 0706  
              ?_lcd_data 0070               _lcd_string 06EB                ?_lcd_init 0070  
             __stringtab 0003                  __ptext1 06EB                  __ptext2 06D2  
                __ptext3 06BD                  __ptext4 0730                  __ptext5 06A8  
             ??_lcd_data 0070               ??_lcd_init 0073     end_of_initialization 07FC  
            ?_lcd_string 0073            ??_lcd_command 0070           __end_of_KeyPad 07FC  
    start_initialization 07FC       lcd_command@command 0072                 ??_KeyPad 0073  
    __end_of_lcd_command 06D2                ___latbits 0002                __pstrings 0003  
            _lcd_command 06BD              __stringbase 0008             ??_lcd_string 0074  
     __end_of_lcd_string 0706       __end_of__stringtab 0009                 _lcd_data 06A8  
               _lcd_init 06D2                stringcode 0003                 stringdir 0003  
               stringtab 0003         lcd_string@length 0073         lcd_string@string 0075  
           ?_lcd_command 0070  
